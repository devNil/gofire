{{define "chat"}}
<!DOCTYPE>
<html>
    <head>
        <title>Table</title>
		<link rel="stylesheet" href="http://yui.yahooapis.com/pure/0.1.0/pure-min.css">
		<style type="text/css">
	    	/* ugly hack to get pure-grids work without 1px gap... */
	    	* { margin: -1px; padding: -1px;}

            html, body{
                font-family:Tahoma, Arial;
                font-size:30px;
            }

            ::-webkit-scrollbar {
                width: 0px;
            }
  

            div#chat{
				letter-spacing: normal; /* override pure-css*/
                margin:40px 0px 0px 40px;
            }

            div#chatentries{
                height:75%;

                overflow-y:scroll;
            }

            input#chattext{
                width:400px;
                font-size:30px;
                border:0px;
            }

            input:focus{
                outline:0px;
            }

            input#chattext{
				margin:0px 0px 0px 40px;
                width:100%;
                font-size:30px;
                border:0px;
            }

            .stripes{
                height:14px;
            }
            
            .blue1{
                background-color:#086FA1;
            }
            
            .blue2{
                background-color:#3CA0D0;
            }
            
            .blue3{
                background-color:#63ADD0;
            }
            
            .orange1{
                background-color:#FF8900;
            }
            
            #contact{
                position:  absolute;
                width:300px;
                height:500px;
                left: 0;
                top: 0; /* set these so Chrome doesn't return 'auto' from getComputedStyle */
                width: 200px; 
                background: rgba(255,255,255,0.66); 
                border: 2px  solid rgba(0,0,0,0.5); 
                border-radius: 4px; padding: 8px;
            }
		a#logout{
			float:right;
			margin-top:20px;
		}
            
        </style>
        <!--schemeid: 3s21Tw0w0w0w0-->
    </head>
    <body>
		<h3 id="connection_status">Offline</h3>
		<div class="pure-g">
			<div class="pure-u-1-4 blue1"><div class="stripes"></div></div>
			<div class="pure-u-1-4 blue2"><div class="stripes"></div></div>
			<div class="pure-u-1-4 blue3"><div class="stripes"></div></div>
			<div class="pure-u-1-4 orange1"><div class="stripes"></div></div>
		</div>
        
        {{if .User.Admin}}
                <!--Should be admin-panel-->
                <strong>Hallo Admin</strong>
            {{end}}

		

	<div id="chat">
	    <div id="chatentries"></div>
	</div>
	<div class="pure-g-r">
	
		<div class="pure-u-4-5">
			<input type="text" placeholder="Type..." id="chattext">
		</div>
		<div class="pure-u-1-5">
			<a class="pure-button pure-button-primary" id="sentButton">Send</a>	
		</div>
	</div>


        <a id="logout" href="/logout">logout</a>
        <script type="application/javascript">    

			var isMobile = {
				Android: function() {
					return navigator.userAgent.match(/Android/i);
				},
				BlackBerry: function() {
					return navigator.userAgent.match(/BlackBerry/i);
				},
				iOS: function() {
					return navigator.userAgent.match(/iPhone|iPad|iPod/i);
				},
				Opera: function() {
					return navigator.userAgent.match(/Opera Mini/i);
				},
				Windows: function() {
					return navigator.userAgent.match(/IEMobile/i);
				},
				any: function() {
					return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());
				}
			};

			if( isMobile.any()){
				var sheet = document.createElement('style')
				sheet.innerHTML = "body, html { font-size: 200%;} input#chattext{ font-size: 135%}";
				document.body.appendChild(sheet);
			}
            var ws = "ws://{{.Host}}/ws";

			function start(wsServerLocation){
				connection = new WebSocket(wsServerLocation);
				connection.onopen = function(){
					document.getElementById("connection_status").innerHTML = "Online"
				}

				connection.onerror = function(){
					console.log("error");
				}			
				
				connection.onmessage = function(event){
	                var msg = JSON.parse(event.data);
    	            createChatEntry(msg.Username+": "+msg.Text)
	            }

				connection.onclose = function(event){
					document.getElementById("connection_status").innerHTML = "closed"
					console.log("close");
		        }

			}
            var connection = new WebSocket(ws)
            
           
            document.getElementById("chattext").focus();
				
				var createChatEntry = function(text){
                    var div = document.createElement("div");
                    div.innerText = text;
                    document.getElementById("chatentries").appendChild(div);
                    document.getElementById("chatentries").scrollTop =  document.getElementById("chatentries").scrollHeight;
            }
            
            var submit = function(text){
                connection.send(JSON.stringify({Username:"", Text:text}));
            }
	
			
			document.getElementById("sentButton").onclick = function(event){
				chattext = document.getElementById("chattext")
				submit(chattext.value)
				chattext.value = ""
				event.preventDefault();
			}

            document.getElementById("chattext").onkeydown = function(event){
                var code = event.keyCode;
                if(code === 13){
                    submit(this.value);
                    this.value = "";
                    event.preventDefault();
                }
            }
        </script>
    </body>
</html>
{{end}}
